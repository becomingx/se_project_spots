!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn--disabled",inputErrorClass:"modal__error_input",errorClass:"modal__error--visible",errorClassHidden:"modal__error--hidden"},t=(e,t,r)=>{const o=e.querySelector(`#${t.id}-error`);t.classList.remove(r.inputErrorClass),t.classList.remove(r.errorClass),o&&(o.textContent="")},r=(e,t)=>{e.classList.add(t.inactiveButtonClass),e.disabled=!0},o=(e,t,o)=>{(e=>e.some((e=>!e.validity.valid)))(e)?r(t,o):(t.disabled=!1,t.classList.remove(o.inactiveButtonClass))},a=e=>{Array.from(document.querySelectorAll(e.formSelector)).forEach((r=>{((e,r)=>{const a=Array.from(e.querySelectorAll(r.inputSelector)),n=e.querySelector(r.submitButtonSelector);o(a,n,r),a.forEach((s=>{s.addEventListener("input",(()=>{((e,r,o)=>{r.validity.valid?t(e,r,o):((e,t,r,o)=>{const a=e.querySelector(`#${t.id}`),n=e.querySelector(`#${a.id}-error`);n&&(t.classList.add(o.inputErrorClass),t.classList.add(o.errorClass),n.textContent=r)})(e,r,r.validationMessage,o)})(e,s,r),o(a,n,r)}))}))})(r,e),r.addEventListener("submit",(e=>{e.preventDefault()}))}))};function n(e,t,r="Save",o="Saving..."){e.textContent=t?o:r}a(e);const s=new class{constructor({baseUrl:e,headers:t}){this._baseUrl=e,this._headers=t}getAppInfo(){return Promise.all([this.getUserCards(),this.getUserInfo()])}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(e.status))).catch((e=>{if(e)return console.error(e),Promise.reject(e)}))}editUserInfo({name:e,about:t}){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then((e=>e.ok?e.json():Promise.reject(e.status))).catch((e=>{if(e)return console.error(e),Promise.reject(e)}))}editUserAvatar({avatar:e}){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>e.ok?e.json():Promise.reject(e.status))).catch((e=>{if(e)return console.error(e),Promise.reject(e)}))}getUserCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(e.status))).catch((e=>{if(e)return console.error(e),Promise.reject(e)}))}createCard({name:e,link:t}){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then((e=>e.ok?e.json():Promise.reject(e.status))).catch((e=>{if(e)return console.error(e),Promise.reject(e)}))}removeCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>e.ok?e:Promise.reject(e.status))).catch((e=>{if(e)return console.error(e),Promise.reject(e)}))}toggleLikeCard(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers}).then((e=>e.ok?e:Promise.reject(e.status))).catch((e=>{if(e)return console.error(e),Promise.reject(e)}))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"30487a64-5f71-41bb-bbbd-2f7240ebc0c2","content-Type":"application/json"}}),c=document.querySelector(".profile__avatar"),l=document.querySelector(".profile__name"),i=document.querySelector(".profile__description"),d=document.querySelector(".profile__add-btn"),u=document.querySelector(".profile__edit-btn"),m=document.querySelector("#edit-avatar-modal"),_=document.querySelector(".profile__edit-avatar-btn"),h=m.querySelector(".modal__form"),v=m.querySelector(".modal__close-btn"),y=m.querySelector("#edit-avatar-url-input"),b=m.querySelector(".modal__submit-btn"),S=document.querySelector("#edit-modal"),f=S.querySelector(".modal__form"),p=S.querySelector(".modal__close-btn"),q=S.querySelector("#profile-name-input"),E=S.querySelector("#profile-description-input"),L=S.querySelector(".modal__submit-btn"),k=document.querySelector("#add-card-modal"),C=k.querySelector(".modal__form"),g=k.querySelector(".modal__close-btn"),j=k.querySelector("#add-card-link-input"),P=k.querySelector("#add-card-name-input"),U=k.querySelector(".modal__submit-btn"),$=document.querySelector("#preview-modal"),x=$.querySelector(".modal__image"),A=$.querySelector(".modal__preview-caption"),D=$.querySelector(".modal__close-btn--preview"),w=document.querySelector("#delete-card-modal"),T=w.querySelector(".modal__cancel-btn"),I=w.querySelector(".modal__submit-btn"),B=w.querySelector(".modal__close-btn"),N=w.querySelector(".modal__form"),O=document.querySelector("#card-template"),H=document.querySelector(".cards__list");let J,z;const M=e=>{const t=O.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),o=t.querySelector(".card__image"),a=t.querySelector(".card__like-btn"),n=t.querySelector(".card__delete-btn");return r.textContent=e.name,o.src=e.link,o.alt=e.name,a.addEventListener("click",(t=>{V(t,e._id)})),n.addEventListener("click",(()=>{K(w)})),I.addEventListener("submit",(()=>{t.remove()})),T.addEventListener("click",(()=>{Q(w)})),B.addEventListener("click",(()=>{Q(w)})),n.addEventListener("click",(r=>{R(t,e)})),o.addEventListener("click",(()=>{K($),A.textContent=e.name,x.alt=e.name,x.src=e.link})),t},F=e=>{if("Escape"===e.key){const e=document.querySelector(".modal_opened");e&&Q(e)}},G=e=>{e.target.classList.contains("modal_opened")&&Q(e.target)},K=e=>{e.classList.add("modal_opened"),document.addEventListener("keydown",F),e.addEventListener("mousedown",G)},Q=e=>{e.classList.remove("modal_opened"),document.removeEventListener("keydown",F),e.removeEventListener("mousedown",G)},R=(e,t)=>{J=e,z=t._id,K(w)},V=(e,t)=>{const r=e.target.classList.contains("card__like-btn-liked");s.toggleLikeCard(t,r).then((t=>{e.target.classList.toggle("card__like-btn-liked")})).catch((e=>{console.error("Error liking card:",e)}))};I.addEventListener("click",(()=>{K(w)})),_.addEventListener("click",(()=>{K(m)})),d.addEventListener("click",(()=>{K(k)})),u.addEventListener("click",(()=>{q.value=l.textContent,E.value=i.textContent,K(S),((e,o,a,n)=>{o.forEach((r=>{t(e,r,n)})),r(a,n)})(S,[q,E],L,e)})),D.addEventListener("click",(()=>{Q($)})),g.addEventListener("click",(()=>{Q(k)})),p.addEventListener("click",(()=>{Q(S)})),v.addEventListener("click",(()=>{Q(m)})),T.addEventListener("click",(()=>{Q(w)})),B.addEventListener("click",(()=>{Q(w)})),f.addEventListener("submit",(e=>{e.preventDefault();const t=L;n(t,!0),s.editUserInfo({name:q.value,about:E.value}).then((e=>{l.textContent=e.name,i.textContent=e.about,Q(S)})).catch(console.error).finally((()=>{n(t,!1)}))})),C.addEventListener("submit",(t=>{t.preventDefault();const o=U;n(o,!0);const a={name:P.value,link:j.value};s.createCard(a).then((o=>{const a=M(o);H.prepend(a),t.target.reset(),Q(k),r(U,e)})).catch((e=>{console.error("Error creating card:",e)})).finally((()=>{n(o,!1)}))})),h.addEventListener("submit",(e=>{e.preventDefault();const t=b;n(t,!0),s.editUserAvatar({avatar:y.value}).then((e=>{c.src=e.avatar,Q(m)})).catch(console.error).finally((()=>{n(t,!1)}))})),N.addEventListener("submit",(()=>{const e=I;n(e,!0,"Delete","Deleting..."),s.removeCard(z).then((()=>{J.remove(),Q(w)})).catch(console.error).finally((()=>{n(e,!1,"Delete","Deleting...")}))})),s.getAppInfo().then((([e,t])=>{e.forEach((e=>{const t=M(e);H.append(t)})),l.textContent=t.name,i.textContent=t.about,c.src=t.avatar})).catch(console.error),a(e)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,